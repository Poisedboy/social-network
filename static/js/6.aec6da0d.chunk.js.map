{"version":3,"sources":["components/Common/FormsControl/FormsControl.js","components/Common/FormsControl/FormsControl.module.css","components/Utils/Validators/validators.js","components/Login/Login.jsx"],"names":["Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","module","exports","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","name","placeholder","component","validate","type","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"0OAGaA,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAC3CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,KAClE,6BACI,8CAAcH,EAAWF,KAE5BG,GAAY,kCAAQF,EAAKI,MAAb,OAKZI,EAAQ,SAAC,GAA6B,IAA5BT,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCACxCC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,KAClE,6BACI,2CAAWH,EAAWF,KAEzBG,GAAY,kCAAQF,EAAKI,MAAb,Q,oBCrBzBK,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,iCCDzH,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCNlC,sFAmCME,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EA1BJ,SAAChB,EAAOG,GACvB,OACI,0BAAMe,SAAUlB,EAAMmB,cAClB,6BACI,kBAAC,IAAD,CAAOC,KAAM,QAASC,YAAa,QAC3BC,UAAWf,IAAOgB,SAAU,CAACb,QAEzC,6BACI,kBAAC,IAAD,CAAOU,KAAM,WAAYC,YAAa,WAC9BC,UAAWf,IAAOgB,SAAU,CAACb,KAC7Bc,KAAM,cAElB,6BACI,kBAAC,IAAD,CAAOJ,KAAM,aAAcI,KAAM,WACzBF,UAAWf,IAAOgB,SAAU,CAACb,OAFzC,eAOA,6BACI,gDA8BDe,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,WAA1BJ,EAtBD,SAACzB,GAMX,OAAGA,EAAM2B,OACE,kBAAC,IAAD,CAAUG,GAAI,aAIrB,6BACI,qCACA,kBAACf,EAAD,CAAgBG,SAXP,SAAAa,GACb/B,EAAM6B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.aec6da0d.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './FormsControl.module.css';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...props} {...input} />\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...props} {...input} />\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__X5VRD\",\"error\":\"FormsControl_error__J2nGE\",\"formSummaryError\":\"FormsControl_formSummaryError__2md3t\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input } from './../Common/FormsControl/FormsControl';\r\nimport { required,  } from './../Utils/Validators/validators';\r\nimport { connect } from \"react-redux\";\r\nimport { login } from './../../Redux/auth-reducer.js';\r\nimport { Redirect } from 'react-router-dom';\r\n// import e from './../Common/FormsControl/FormsControl.module.css';\r\n\r\nconst LoginForm =  (props, error) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'email'} placeholder={'Email'} \r\n                        component={Input} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field name={'password'} placeholder={'Password'} \r\n                        component={Input} validate={[required]}\r\n                        type={'password'} />\r\n            </div>\r\n            <div>\r\n                <Field name={'rememberMe'} type={'checkbox'} \r\n                        component={Input} validate={[required]} />Remember me\r\n            </div>\r\n            {/* { error && <div className={e.formSummaryError}>\r\n                {error}\r\n            </div>} */}\r\n            <div>\r\n                <button>Log in </button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    \r\n    const onSubmit = formData => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth \r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}