{"version":3,"sources":["components/Common/FormsControl/FormsControl.js","components/Common/FormsControl/FormsControl.module.css","components/Utils/Validators/validators.js","components/HOC/AuthRedirect.js","components/Profile/MyPosts/myposts.module.css","components/Profile/MyPosts/Posts/post.module.css","components/Image/avatar.jpg","components/Profile/ProfileInfo/profileinfo.module.css","components/Profile/MyPosts/Posts/post.jsx","components/Profile/MyPosts/myposts.jsx","components/Profile/MyPosts/myposts-container.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/profileinfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","module","exports","required","value","maxLengthCreator","maxLength","length","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","Post","s","item","src","ava","alt","message","likesCount","maxLength10","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","name","placeholder","validate","MyPosts","memo","post","posts","reverse","map","p","console","log","postsBlock","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","isOwner","profile","Preloader","i","descriptionBlock","photos","large","userPhoto","avatarSize","type","target","files","savePhoto","Profile","isOnwer","ProfileContainer","userId","match","params","authorizedUserId","getUsersProfile","getStatus","refreshProfile","prevProps","prevState","snaphot","compose","withRouter"],"mappings":"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","file":"static/js/4.0b8a31f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './FormsControl.module.css';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...props} {...input} />\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...props} {...input} />\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__X5VRD\",\"error\":\"FormsControl_error__J2nGE\",\"formSummaryError\":\"FormsControl_formSummaryError__2md3t\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n","import { Redirect } from \"react-router-dom\"\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect) (RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"myposts_postsBlock__25fn9\",\"posts\":\"myposts_posts__-eqna\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__3PSvo\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.8e683e9e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"profileinfo_descriptionBlock__2vv1G\",\"avatarSize\":\"profileinfo_avatarSize__3KsP-\"};","import React from \"react\";\r\nimport s from \"./post.module.css\";\r\nimport ava from \"./../../../Image/avatar.jpg\";\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src={ava} alt='avatar profile' />\r\n      {props.message}\r\n      <div>\r\n        <span>Like {props.likesCount} </span>\r\n        <button>Remove Post</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './myposts.module.css';\r\nimport Post from './Posts/post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../Utils/Validators/validators';\r\nimport { Textarea } from '../../Common/FormsControl/FormsControl';\r\n\r\nconst maxLength10 = maxLengthCreator(50);\r\n\r\nconst AddNewPostForm = props => {\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostText' \r\n              placeholder='text here' \r\n              validate={[required, maxLength10]} />\r\n      </div>  \r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'postAddMessageForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n  let post = [...props.posts].reverse().map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let addPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  console.log('RENDER');\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <AddPostFormRedux onSubmit={addPost} />\r\n      </div>\r\n      <div className={s.posts}>\r\n        {post}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import MyPosts from './myposts.jsx';\r\nimport { addPostActionCreator } from '../../../Redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = state => {\r\n  return{\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = dispatch => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode ]= useState(false);\r\n    let [status, setStatus ]= useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"No-Status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} \r\n                        onBlur={deactivateEditMode} value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport i from './profileinfo.module.css';\r\nimport Preloader from './../../Common/Preloader/Preloader.js';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from './../../Image/1.png'\r\n\r\nconst ProfileInfo = (props, isOwner) => {\r\n  if(!props.profile) {\r\n    return <Preloader />\r\n  };\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    };\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={i.descriptionBlock}>\r\n        <img src={props.profile.photos.large || userPhoto} alt=\"ava\" className={i.avatarSize} />\r\n        {isOwner &&\r\n          <div>\r\n            <input type={'file'} onChange={onMainPhotoSelected} />\r\n          </div>\r\n        }\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n        <p>FrontEnd Dev(ReactJS + Redux)</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from './MyPosts/myposts-container.jsx';\r\nimport ProfileInfo from './ProfileInfo/profileinfo.jsx';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo savePhoto={props.savePhoto}\r\n                    isOnwer={props.isOnwer}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from './Profile.jsx';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUsersProfile, getStatus, updateStatus, savePhoto } from './../../Redux/profile-reducer';\r\nimport { withAuthRedirect } from \"../HOC/AuthRedirect.js\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  \r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUsersProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snaphot) {\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Profile {...this.props}\r\n                savePhoto={this.props.savePhoto}\r\n                isOwner={!this.props.match.params.userId}  \r\n                profile={this.props.profile} \r\n                status={this.props.status}  \r\n                updateStatus={this.props.updateStatus} />\r\n    )\r\n  }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus, savePhoto}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}