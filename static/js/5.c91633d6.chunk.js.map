{"version":3,"sources":["components/Common/FormsControl/FormsControl.js","components/Common/FormsControl/FormsControl.module.css","components/Utils/Validators/validators.js","components/HOC/AuthRedirect.js","components/Dialogs/dialogs.module.css","components/Dialogs/Message/message.module.css","components/Dialogs/DialogItems/dialog-items.module.css","components/Dialogs/Message/message.jsx","components/Dialogs/DialogItems/dialog-items.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogs-container.jsx"],"names":["Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","module","exports","required","value","maxLengthCreator","maxLength","length","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","Message","d","message","DialogItem","path","id","dialog","active","name","maxLength100","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsPage","dialogs","map","key","messages","m","dialogsItem","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"0OAGaA,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAC3CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,KAClE,6BACI,8CAAcH,EAAWF,KAE5BG,GAAY,kCAAQF,EAAKI,MAAb,OAKZI,EAAQ,SAAC,GAA6B,IAA5BT,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCACxCC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,KAClE,6BACI,2CAAWH,EAAWF,KAEzBG,GAAY,kCAAQF,EAAKI,MAAb,Q,oBCrBzBK,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,iCCDzH,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,sICF9BE,EAA0B,SAAAC,GAAK,MAAK,CACpCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAIC,KAAKtB,MAAMiB,OACR,kBAACG,EAAcE,KAAKtB,OADG,kBAAC,IAAD,CAAUuB,GAAG,eAHR,GACXC,IAAMJ,WAStC,OAFqCK,YAAQV,EAARU,CAAkCJ,K,oBCf3Eb,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,2B,oBCA5KD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,YAAc,kCAAkC,OAAS,6BAA6B,OAAS,+B,wGCQ1IiB,EANC,SAAC1B,GACb,OACA,yBAAKI,UAAWuB,IAAEC,SAAU5B,EAAM4B,U,yBCQvBC,EATI,SAAC7B,GAChB,IAAI8B,EAAO,WAAa9B,EAAM+B,GAC9B,OACI,yBAAK3B,UAAWuB,IAAEK,OAAS,IAAML,IAAEM,QAC/B,kBAAC,IAAD,CAASV,GAAIO,GAAO9B,EAAMkC,Q,2CCChCC,EAAevB,YAAiB,KAkBhCwB,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAAArC,GACnB,OACI,0BAAMuC,SAAUvC,EAAMwC,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAW7C,IACV8C,SAAU,CAACjC,IAAUyB,GACrBD,KAAK,iBACLU,YAAY,wBAExB,6BACI,6CAqCDC,EA7BC,SAAC7C,GAEb,IAAIgB,EAAQhB,EAAM8C,YAEdd,EAAShB,EAAM+B,QAAQC,KAAK,SAAArB,GAAC,OAAI,kBAAC,EAAD,CAAYO,KAAMP,EAAEO,KAAMe,IAAKtB,EAAEI,GAAIA,GAAIJ,EAAEI,QAC5EmB,EAAWlC,EAAMY,QAAQoB,KAAK,SAAAG,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASqB,IAAKE,EAAEpB,QAO3E,OAAI/B,EAAMiB,OAKN,yBAAKb,UAAWuB,IAAEoB,SACd,yBAAK3C,UAAWuB,IAAEyB,aACZpB,GAEN,yBAAK5B,UAAWuB,IAAEuB,UACd,6BAAOA,GACP,kBAACd,EAAD,CAAqBG,SAfb,SAACc,GACjBrD,EAAMsD,YAAYD,EAAOE,qBAIlB,kBAAC,IAAD,CAAUhC,GAAI,Y,yBCpBdiC,sBACX/B,aAjBkB,SAACT,GACnB,MAAO,CACH8B,YAAa9B,EAAM8B,gBAIF,SAACW,GACtB,MAAO,CAEHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,SAQpCpC,IAFWqC,CAGbX","file":"static/js/5.c91633d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './FormsControl.module.css';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...props} {...input} />\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...props} {...input} />\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__X5VRD\",\"error\":\"FormsControl_error__J2nGE\",\"formSummaryError\":\"FormsControl_formSummaryError__2md3t\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n","import { Redirect } from \"react-router-dom\"\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect) (RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__txmM2\",\"dialogsItem\":\"dialogs_dialogsItem__2cF4s\",\"dialog\":\"dialogs_dialog__TYKa5\",\"active\":\"dialogs_active__1For0\",\"message\":\"dialogs_message__2WJqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"message_message__1Q5IP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialog-items_dialogs__V-RGf\",\"dialogsItem\":\"dialog-items_dialogsItem__meuz7\",\"dialog\":\"dialog-items_dialog__pB7Wr\",\"active\":\"dialog-items_active__2hxKW\"};","import React from 'react';\r\nimport d from './message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n    <div className={d.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport d from './dialog-items.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialog/\" + props.id; \r\n    return (\r\n        <div className={d.dialog + ' ' + d.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport d from './dialogs.module.css';\r\nimport Message from './Message/message.jsx';\r\nimport DialogItem from './DialogItems/dialog-items.jsx';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from './../Common/FormsControl/FormsControl.js';\r\nimport {required, maxLengthCreator} from './../Utils/Validators/validators.js';\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} \r\n                        validate={[required, maxLength100]}\r\n                        name='newMessageBody' \r\n                        placeholder='Enter your message' />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialog = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} /> );\r\n    let messages = state.message.map( m => <Message message={m.message} key={m.id} /> );\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n    if(!props.isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    };\r\n\r\n    return (\r\n        <div className={d.dialogs}>\r\n            <div className={d.dialogsItem}>\r\n                { dialog }\r\n            </div>\r\n            <div className={d.messages}>\r\n                <div>{ messages }</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n","import { sendMessageCreator } from '../../Redux/dialogs-reducer';\r\nimport Dialogs from './dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from \"../HOC/AuthRedirect.js\";\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}